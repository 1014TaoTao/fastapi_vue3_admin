########### 每个指令必须有分号结束。#################
user administrator administrators; # 配置用户或组，默认为nobody nobody
worker_processes 2; # 允许生成的进程数，默认为1
pid /nginx/pid/nginx.pid; # 指定 Nginx 进程运行文件存放地址
error_log log/error.log debug; # 制定日志路径，级别。这个设置可以放入全局块、http块、server块，级别依次为：debug|info|notice|warn|error|crit|alert|emerg

events {
    accept_mutex on; # 设置网络连接序列化，防止惊群现象发生，默认为on
    multi_accept on; # 设置一个进程是否同时接受多个网络连接，默认为off
    use epoll; # 事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport
    worker_connections 1024; # 最大连接数，默认为512
}

http {
    include mime.types; # 文件扩展名与文件类型映射表
    default_type application/octet-stream; # 默认文件类型，默认为text/plain

    # 取消服务日志
    access_log off;

    # 自定义日志格式
    log_format access '$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for';

    # 启用访问日志
    access_log log/access.log access; # combined为日志格式的默认值

    sendfile on; # 允许sendfile方式传输文件，默认为off，可以在http块、server块、location块
    sendfile_max_chunk 100k; # 每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限
    keepalive_timeout 65; # 连接超时时间，默认为75秒，可以在http、server、location块

    # 定义上游服务器
    upstream mysvr {
        server 127.0.0.1:7878;
        server 192.168.10.121:3333 backup; # 热备
    }

    # 错误页
    error_page 404 https://www.baidu.com;

    # 定义一个 server 块
    server {
        # 单连接请求上限次数
        keepalive_requests 120;

        # 监听端口
        listen 4545;

        # 监听地址
        server_name 127.0.0.1;

        # 前端代理
        location / {
				proxy_set_header Host $host;
				root /web/front/;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header REMOTE-HOST $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				try_files $uri $uri/ /index.html;
				index /index.html;
        }

        # 后端代理
        location  /api/ {
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header REMOTE-HOST $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                add_header Access-Control-Allow-Methods *;
                add_header Access-Control-Allow-Origin $http_origin;
                proxy_pass http://127.0.0.1:8010/;
        }
    }
}