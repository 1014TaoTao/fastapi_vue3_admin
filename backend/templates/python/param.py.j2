# -*- coding: utf-8 -*-

from datetime import datetime
from typing import Optional
from fastapi import Query

from app.core.validator import DateTimeStr

class {{ tableName|snake_to_pascal_case }}QueryParam:
    """{{ functionName }}查询参数"""

    def __init__(
        self,
        {% for column in columns %}
        {% if column.queryType == 'LIKE' %}
        {{ column.columnName }}: Optional[{{ column.pythonType }}] = Query(None, description="{{ column.columnComment }}"),
        {% endif %}
        {% endfor %}
        start_time: Optional[DateTimeStr] = Query(None, description="开始时间", example="2025-01-01 00:00:00"),
        end_time: Optional[DateTimeStr] = Query(None, description="结束时间", example="2025-12-31 23:59:59"),
        creator: Optional[int] = Query(None, description="创建人"),
    ) -> None:
        super().__init__()
        
        # 模糊查询字段
        {% for column in columns %}
        {% if column.queryType == 'LIKE' %}
        self.{{ column.columnName }} = ("like", {{ column.columnName }})
        {% endif %}
        {% endfor %}

        # 精确查询字段
        self.creator_id = creator
        
        # 时间范围查询
        if start_time and end_time:
            start_datetime = datetime.strptime(start_time, '%Y-%m-%d %H:%M:%S')
            end_datetime = datetime.strptime(end_time, '%Y-%m-%d %H:%M:%S')
            self.created_at = ("between", (start_datetime, end_datetime))